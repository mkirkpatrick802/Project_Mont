// Copyright Voxel Plugin SAS. All Rights Reserved.

#pragma once

#include "VoxelEditorMinimal.h"
#include "VoxelPinType.h"
#include "VoxelGraphSchema.generated.h"

UCLASS()
class UVoxelGraphSchema : public UEdGraphSchema
{
	GENERATED_BODY()

public:
	bool ConnectionCausesLoop(const UEdGraphPin* InputPin, const UEdGraphPin* OutputPin) const;
	bool CanCreateAutomaticConversionNode(const UEdGraphPin* PinA, const UEdGraphPin* PinB) const;
	TSharedPtr<FEdGraphSchemaAction> FindCastAction(const FEdGraphPinType& From, const FEdGraphPinType& To) const;

	static bool TryGetPromotionType(
		const UEdGraphPin& Pin,
		const FVoxelPinType& TargetType,
		FVoxelPinType& OutType,
		FString& OutAdditionalText);

	bool CreatePromotedConnectionSafe(UEdGraphPin*& PinA, UEdGraphPin*& PinB) const;

public:
	//~ Begin UEdGraphSchema Interface
	virtual void GetGraphContextActions(FGraphContextMenuBuilder& ContextMenuBuilder) const override;
	virtual bool CreateAutomaticConversionNodeAndConnections(UEdGraphPin* PinA, UEdGraphPin* PinB) const override;

	virtual const FPinConnectionResponse CanCreateConnection(const UEdGraphPin* PinA, const UEdGraphPin* PinB) const override;
	virtual bool TryCreateConnection(UEdGraphPin* PinA, UEdGraphPin* PinB) const override;
	virtual bool CreatePromotedConnection(UEdGraphPin* PinA, UEdGraphPin* PinB) const override;
	virtual bool DoesDefaultValueMatchAutogenerated(const UEdGraphPin& InPin) const override;

	virtual TSharedPtr<FEdGraphSchemaAction> GetCreateCommentAction() const override;
	virtual int32 GetNodeSelectionCount(const UEdGraph* Graph) const override;
	virtual void GetContextMenuActions(UToolMenu* Menu, UGraphNodeContextMenuContext* Context) const override;
	virtual void ResetPinToAutogeneratedDefaultValue(UEdGraphPin* Pin, bool bCallModifyCallbacks = true) const override;
	virtual void CreateDefaultNodesForGraph(UEdGraph& Graph) const override;
	virtual void OnPinConnectionDoubleCicked(UEdGraphPin* PinA, UEdGraphPin* PinB, const FVector2D& GraphPosition) const override;

	virtual void BreakNodeLinks(UEdGraphNode& TargetNode) const override;
	virtual void BreakPinLinks(UEdGraphPin& TargetPin, bool bSendsNodeNotification) const override;

	virtual void TrySetDefaultValue(UEdGraphPin& Pin, const FString& NewDefaultValue, bool bMarkAsModified) const override;
	virtual void TrySetDefaultObject(UEdGraphPin& Pin, UObject* NewDefaultObject, bool bMarkAsModified) const override;

	virtual void GetAssetsGraphHoverMessage(const TArray<FAssetData>& Assets, const UEdGraph* HoverGraph, FString& OutTooltipText, bool& OutOkIcon) const override;
	virtual void DroppedAssetsOnGraph(const TArray<FAssetData>& Assets, const FVector2D& GraphPosition, UEdGraph* EdGraph) const override;

	virtual bool ShouldHidePinDefaultValue(UEdGraphPin* Pin) const override;
	virtual bool ShouldAlwaysPurgeOnModification() const override { return false; }
	virtual FLinearColor GetPinTypeColor(const FEdGraphPinType& PinType) const override;
	//~ End UEdGraphSchema Interface
};